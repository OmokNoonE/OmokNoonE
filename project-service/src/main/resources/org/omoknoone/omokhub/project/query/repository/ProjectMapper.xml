<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.omoknoone.omokhub.project.query.repository.ProjectMapper">
    <!--설명. 프로젝트 id 기준 조회 -->
    <resultMap id="projectAndTeamAndMemberResultMap" type="org.omoknoone.omokhub.project.query.dto.ProjectAndTeamAndMemberDTO">
        <id property="projectId" column="PROJECT_ID"/>
        <result property="title" column="TITLE"/>
        <result property="startDate" column="START_DATE"/>
        <result property="endDate" column="END_DATE"/>
        <result property="status" column="STATUS"/>
        <result property="isPublic" column="IS_PUBLIC"/>
        <result property="lastModifiedDate" column="LAST_MODIFIED_DATE"/>
        <collection property="projectTeams" ofType="org.omoknoone.omokhub.project.query.dto.ProjectTeamDTO">
            <result property="teamName" column="TEAM_NAME"/>
        </collection>
        <collection property="projectMembers" ofType="org.omoknoone.omokhub.project.query.dto.ProjectMemberDTO">
            <result property="memberId" column="MEMBER_ID"/>
        </collection>
    </resultMap>
<select id="searchProjectByProjectId" parameterType="_int" resultMap="projectAndTeamAndMemberResultMap">
    SELECT
          a.PROJECT_ID
       ,  a.TITLE
       ,  a.START_DATE
       ,  a.END_DATE
       ,  a.STATUS
       ,  a.IS_PUBLIC
       ,  a.LAST_MODIFIED_DATE
       ,  b.TEAM_NAME		-- 팀명
       ,  c.MEMBER_ID		-- 팀장
     FROM project a
     JOIN project_team b ON (a.project_team_id = b.project_team_id)
     JOIN project_member c ON (a.project_member_id = c.project_member_id)
    WHERE a.project_id = #{projectId}
      AND c.member_category = '팀장'
    ORDER BY a.project_id DESC;
</select>

    <!-- 설명. 진행상태 별 프로젝트 목록 보기 -->
    <select id="searchProjectByStatus" parameterType="string" resultMap="projectAndTeamAndMemberResultMap">
        SELECT
              a.PROJECT_ID
            , a.TITLE
            , a.START_DATE
            , a.END_DATE
            , a.STATUS
            , a.IS_PUBLIC
            , a.LAST_MODIFIED_DATE
            , b.TEAM_NAME	-- 팀명
            , c.MEMBER_ID		-- 팀장
         FROM project a
         JOIN project_team b ON (a.project_team_id = b.project_team_id)
         JOIN project_member c ON (a.project_member_id = c.project_member_id)
        WHERE c.member_category = '팀장'
          AND a.status = #{status}
          And a.is_public
        ORDER BY a.project_id DESC;
    </select>

    <!-- 설명. 특정 팀이 속한 모든 프로젝트를 팀 이름으로 조회 -->
    <select id="searchProjectByTeamName" parameterType="string" resultMap="projectAndTeamAndMemberResultMap">
        SELECT
              a.project_id
            , a.title
            , a.start_date
            , a.end_date
            , a.status
            , a.is_public
            , a.LAST_MODIFIED_DATE
            , b.team_name
            , c.member_id		-- 팀장
        FROM project a
         JOIN project_team b ON (a.project_team_id = b.project_team_id)
         JOIN project_member c ON (a.project_member_id = c.project_member_id)
        WHERE c.member_category = '팀장'
          AND b.team_name = #{teamName}
    </select>

    <!-- 설명. 내가 참여한 프로젝트 목록 -->
    <select id="searchMyProjects" parameterType="string" resultMap="projectAndTeamAndMemberResultMap">
        SELECT
              a.project_id
            , a.title
            , a.start_date
            , a.end_date
            , a.status
            , a.is_public
            , a.LAST_MODIFIED_DATE
            , b.team_name
            , c.member_id
         FROM project a
         JOIN project_team b ON (a.project_team_id = b.project_team_id)
         JOIN project_member c ON (a.project_member_id = c.project_member_id)
        WHERE c.member_id = #{memberId}
    </select>
</mapper>